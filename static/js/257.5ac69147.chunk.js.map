{"version":3,"file":"static/js/257.5ac69147.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 85px;\n  padding: 7px 10px;\n  column-gap: 5px;\n\n  border-radius: 5px;\n\n  font-size: 16px;\n  font-weight: 500;\n  background-color: #e5beec;\n\n  transition: transform 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    transform: scale(1.05);\n    color: orangered;\n    background-color: #2a2f4f;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  margin: 15px 0;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 20px;\n    flex-direction: row;\n    row-gap: 0px;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Overview = styled.p`\n  line-height: 1.3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Genre = styled.li`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fde2f3;\n\n  padding: 7px 10px;\n  border-radius: 5px;\n`;\n\nexport const AdditionalInfo = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { BsPeople, BsChatLeftText } from 'react-icons/bs';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'services/movieAPI';\nimport {\n  StyledLink,\n  MovieContainer,\n  InfoContainer,\n  Overview,\n  GenresList,\n  Genre,\n  AdditionalInfo,\n  AddInfoList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movieDetails = await getMovieDetails(\n          movieId,\n          abortCtrl.current.signal\n        );\n        setMovieInfo(movieDetails);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  const {\n    title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n    vote_average,\n  } = movieInfo || {};\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && movieInfo && (\n        <>\n          <StyledLink to={backLinkHref}>\n            <FaArrowLeft />\n            Go back\n          </StyledLink>\n          <div>\n            <MovieContainer>\n              <img\n                width=\"300px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt={original_title}\n              />\n              <InfoContainer>\n                <h1>\n                  {title} ({release_date.slice(0, 4)})\n                </h1>\n                <p>User score: {Math.floor(vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <Overview>{overview}</Overview>\n                <h2>Genres</h2>\n                <GenresList>\n                  {genres?.map(genre => (\n                    <Genre key={genre.id}>{genre.name}</Genre>\n                  ))}\n                </GenresList>\n              </InfoContainer>\n            </MovieContainer>\n            <AdditionalInfo>Additional information</AdditionalInfo>\n            <AddInfoList>\n              <li>\n                <StyledLink to=\"cast\" state={{ ...location.state }}>\n                  <BsPeople />\n                  Cast\n                </StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\" state={{ ...location.state }}>\n                  <BsChatLeftText />\n                  Reviews\n                </StyledLink>\n              </li>\n            </AddInfoList>\n          </div>\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '4f3aaab7a430fc83aac7a26892b43341';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["StyledLink","styled","Link","MovieContainer","InfoContainer","Overview","GenresList","Genre","AdditionalInfo","AddInfoList","movieId","useParams","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","abortCtrl","useRef","location","useLocation","backLinkHref","state","from","useEffect","getMovieInfo","current","abort","AbortController","getMovieDetails","signal","movieDetails","code","message","title","release_date","overview","genres","poster_path","original_title","vote_average","Loader","to","width","src","alt","slice","Math","floor","map","genre","name","id","Suspense","fallback","API_KEY","axios","getTrending","params","api_key","language","response","data","results","getMoviesByQuery","query","include_adult","page","getCast","cast","getReviews"],"sourceRoot":""}